// // const { Neo4jGraphQL } = require('@neo4j/graphql');
// // const { ApolloServer } = require('apollo-server-lambda');
// // const neo4j = require('neo4j-driver');
// // const fs = require('fs');
// // const path = require('path');
// // // const dotenv = require('dotenv');

// // // // Load contents of .env as environment variables
// // // dotenv.config();

// // // // Load GraphQL type definitions from schema.graphql file

// // const typeDefs = fs
// //   .readFileSync(path.join(__dirname, './schema.graphql'))
// //   .toString('utf-8');
// // console.log(typeDefs);
// // // // /Users/steven/Development/pigeonly/blog/seoastro/neo4j/schema.graphql
// // // // Create executable GraphQL schema from GraphQL type definitions,
// // // // using @neo4j/graphql to autogenerate resolvers
// // // // const neoSchema = new Neo4jGraphQL({
// // // //   typeDefs,
// // // //   debug: true,
// // // // });
// // // // console.log(neoSchema);
// // // // console.log(process.env.NEO4J_URI);

// // // // Create Neo4j driver instance
// // // const driver = neo4j.driver(
// // //   process.env.NEO4J_URI,
// // //   neo4j.auth.basic(process.env.NEO4J_USER, process.env.NEO4J_PASSWORD)
// // // );

// // // const neoSchema = new Neo4jGraphQL({ typeDefs, driver });
// // // const schema = async () => {
// // //   await neoSchema.getSchema().then((res) => {
// // //     return res;
// // //   });
// // // };

// // // console.log('this down here');
// // // // console.log(neoSchema);
// // // console.log('34344341221121');
// // // console.log('anohther one');
// // // console.log(neoSchema.getSchema().then((res) => console.log(res)));
// // // // console.log(schema.then((res) => console.log(res)));
// // // console.log('7777734344341221121');
// // // // Create ApolloServer instance that will serve GraphQL schema created above
// // // // Inject Neo4j driver instance into the context object, which will be passed
// // // //  into each (autogenerated) resolver
// // // const server = new ApolloServer({
// // //   context: { driver, driverConfig: { database: process.env.NEO4J_DATABASE } },
// // //   schema,
// // //   introspection: true,
// // //   playground: true,
// // // });

// // // // Start ApolloServer
// // // // eslint-disable-next-line no-unused-vars
// // // server.listen().then(({ url }) => {
// // //   console.log('GraphQL server ready');
// // // });

// // // // console.log(server);

// // const neoSchema = new Neo4jGraphQL({
// //   typeDefs,
// //   driver: neo4j.getDriver,
// // });

// // const initServer = async () => {
// //   return neoSchema.getSchema().then((schema) => {
// //     const server = new ApolloServer({
// //       schema,
// //       context: ({ event }) => ({ req: event }),
// //       introspection: true,
// //     });
// //     console.log('this is server');
// //     // console.log(server.then((res) => console.log(res)));
// //     return server;
// //   });
// // };

// // // eslint-disable-next-line import/prefer-default-export
// // // const graphqlHandler = async (event, context, callback) => {
// // // const serverHandler = initServer();
// // console.log('sdfsdaf this is server');
// // console.log(initServer);
// // initServer().then(() => {
// //   console.log('GraphQL server ready');
// //   // console.log(res);
// //   // res.listen();
// // });
// // const { Neo4jGraphQL } = require('@neo4j/graphql');
// // const { gql, ApolloServer } = require('apollo-server');
// // const neo4j = require('neo4j-driver');
// // // const fs = require('fs');
// // // const path = require('path');
// // // const dotenv = require('./node_modules/dotenv');

// // // Load contents of .env as environment variables
// // // dotenv.config();

// // // Load GraphQL type definitions from schema.graphql file
// // // const typeDefs = fs.readFileSync(path.join(__dirname, 'schema.graphql'));
// // const typeDefs = gql`
// //   type Movie {
// //     title: String
// //     released: Int
// //     tagline: String
// //     genres: [Genre!]! @relationship(type: "IN_GENRE", direction: OUT)
// //   }

// //   type Genre {
// //     name: String
// //     movies: [Movie!]! @relationship(type: "IN_GENRE", direction: IN)
// //   }
// // `;

// // // Create Neo4j driver instance
// // const driver = neo4j.driver(
// //   process.env.NEO4J_URI,
// //   neo4j.auth.basic(process.env.NEO4J_USER, process.env.NEO4J_PASSWORD)
// // );

// // // Create executable GraphQL schema from GraphQL type definitions,
// // // using @neo4j/graphql to autogenerate resolvers
// // const neoSchema = new Neo4jGraphQL({
// //   typeDefs,
// //   driver,
// //   debug: true,
// // });

// // console.log(neoSchema.getSchema().then((res) => console.log(res)));
// // // Create ApolloServer instance that will serve GraphQL schema created above
// // // Inject Neo4j driver instance into the context object, which will be passed
// // //  into each (autogenerated) resolver
// // const server = new ApolloServer({
// //   schema: neoSchema.getSchema().then((res) => res),
// //   introspection: true,
// //   playground: true,
// // });

// // // Start ApolloServer
// // // eslint-disable-next-line no-unused-vars
// // server.listen().then(({ url }) => {
// //   console.log('GraphQL server ready');
// // });

// // const { gql, ApolloServer } = require('apollo-server');
// // const { makeAugmentedSchema } = require('neo4j-graphql-js');
// // const neo4j = require('neo4j-driver');

// // Construct a schema, using GraphQL schema language
// // const typeDefs = gql`
// //   type Movie {
// //     title: String
// //     released: Int
// //     tagline: String
// //   }

// //   type Genre {
// //     name: String
// //     movies: [Movie!]
// //   }
// // `;

// // Generate executable schema with auto-generated resolvers
// // const schema = makeAugmentedSchema({ typeDefs });
// // const neoSchema = new Neo4jGraphQL({
// //   typeDefs,
// //   schema,
// //   debug: true,
// // });

// // Database credentials are stored in environment variables
// // Create your own Neo4j instance with the movies dataset at
// // neo4jsandbox.com (look for Recommendations use case)
// // const { NEO4J_URI, NEO4J_USER, NEO4J_PASSWORD } = process.env;

// // Create a database driver instance
// // const driver = neo4j.driver(
// //   process.env.NEO4J_URI,
// //   neo4j.auth.basic(process.env.NEO4J_USER, process.env.NEO4J_PASSWORD)
// // );

// // console.log(neoSchema);
// // Apollo Server will serve our GraphQL API using the schema
// // generated by neo4j-graphql-js's makeAugmentedSchema
// // const server = new ApolloServer({
// //   // context: { driver },
// //   schema,
// // });


// // server.listen().then(({ url }) => {
// // console.log(` Server ready at ${url}`);
// // });
// import {
//   ColorTags,
//   GradientText,
//   Project,
//   Section,
//   Tags,
// } from 'astro-boilerplate-components';
// import React from 'react';
// console.log('server');

// const testComp = () => (
//  < Section
//     title={
//       <>
//         Recent <GradientText>Projects</GradientText>
//       </>
//     }
//   >
//     <div className="flex flex-col gap-6">
//       <Project
//         name="Project 1"
//         description="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse
//         bibendum. Nunc non posuere consectetur, justo erat semper enim, non
//         hendrerit dui odio id enim."
//         link="/"
//         img={{
//           src: '/assets/images/project-web-design.png',
//           alt: 'Project Web Design',
//         }}
//         category={
//           <>
//             <Tags color={ColorTags.FUCHSIA}>Astro.js</Tags>
//             <Tags color={ColorTags.LIME}>Web design</Tags>
//             <Tags color={ColorTags.SKY}>Tailwind.css</Tags>
//             <Tags color={ColorTags.ROSE}>TypeScript</Tags>
//           </>
//         }
//       />
//       <Project
//         name="Project 2"
//         description="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse
//         bibendum. Nunc non posuere consectetur, justo erat semper enim, non
//         hendrerit dui odio id enim."
//         link="/"
//         img={{ src: '/assets/images/project-fire.png', alt: 'Project Fire' }}
//         category={
//           <>
//             <Tags color={ColorTags.VIOLET}>Next.js</Tags>
//             <Tags color={ColorTags.EMERALD}>Blog</Tags>
//             <Tags color={ColorTags.YELLOW}>JavaScript</Tags>
//           </>
//         }
//       />
//       <Project
//         name="Project 3"
//         description="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse
//         bibendum. Nunc non posuere consectetur, justo erat semper enim, non
//         hendrerit dui odio id enim."
//         link="/"
//         img={{ src: '/assets/images/project-maps.png', alt: 'Project Maps' }}
//         category={
//           <>
//             <Tags color={ColorTags.FUCHSIA}>Astro.js</Tags>
//             <Tags color={ColorTags.INDIGO}>Bootstrap</Tags>
//             <Tags color={ColorTags.ROSE}>TypeScript</Tags>
//           </>
//         }
//       />
//     </div>
//   </Section>
// );

// export { testComp };
